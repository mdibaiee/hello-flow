collections:
  # Collection into which we CDC.
  acmeCo/files:
    schema: files.schema.yaml
    key: [/_meta/file]

  # Derivation of current word counts.
  acmeCo/file-sizes:
    schema:
      type: object
      properties:
        filename:
          type: string
          description: file name
        size:
          type: integer
          description: size of file
        arr:
          type: array
          description: random array for testing
          items:
            type: integer
        nested_array:
          type: array
          description: a nested array
          items:
            type: array
            items:
              type: string
        obj:
          type: object
          description: random object for testing
          properties:
            name:
              type: string
              description: name
      required: [filename, size, arr, nested_array]
      reduce: { strategy: merge }
    key: [/filename]
    derivation:
      transform:
        fromDocuments:
          source:
            name: acmeCo/files
          publish:
            lambda: typescript
    projections:
      test: /filename

tests:
  acmeCo/tests/file-sizes-from-files:
    - ingest:
        description: Start with some initial files
        collection: acmeCo/files
        documents:
          - body: &doc1 "The cat in the hat!"
            _meta:
              file: test
          - body: &doc2 "The cat hat"
            _meta:
              file: another

    - verify:
        description: Expect sizes to reflect initial files
        collection: acmeCo/file-sizes
        documents:
          - { filename: another, size: 11, arr: [1, 2] }
          - { filename: test, size: 19, arr: [1, 2] }

storageMappings:
  "":
    stores:
      - provider: S3
        bucket: acmeco-data
